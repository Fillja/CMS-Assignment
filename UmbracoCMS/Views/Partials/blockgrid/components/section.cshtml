@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>
@using Umbraco.Cms.Web.Common.PublishedModels;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.PropertyEditors.ValueConverters;

@{
    var sectionTitle = Model?.Content.Value<string>("sectionTitle") ?? "";
    var sectionId = sectionTitle?.ToString().ToLower().Trim().Replace(" ", "-");

    var spacingTopClass = (Model!.Content.Value<bool>("addSpaceToTop")) ? "spacing-top" : "";
    var spacingBottomClass = (Model.Content.Value<bool>("addSpaceToBottom")) ? "spacing-bottom" : "";

    var sectionBackgroundColorLabel = (Model.Content?.Value<ColorPickerValueConverter.PickedColor>("sectionBackgroundColor"))?.Label.ToLower() ?? null;
    var backgroundColorClass = (!string.IsNullOrEmpty(sectionBackgroundColorLabel)) ? $"bg-{sectionBackgroundColorLabel}" : "";
    
    var sectionBackgroundImage = Model?.Content?.Value<IPublishedContent>("sectionBackgroundImage")?.Url() ?? null;

    var sectionGradientColor1 = (Model.Content?.Value<ColorPickerValueConverter.PickedColor>("sectionGradientColor1"))?.Label.ToLower() ?? "";
    var sectionGradientColor2 = (Model.Content?.Value<ColorPickerValueConverter.PickedColor>("sectionGradientColor2"))?.Label.ToLower() ?? "";
    var color1GradientPercentage = Model?.Content.Value<int>("color1GradientPercentage");
    var color2GradientPercentage = Model?.Content.Value<int>("color2GradientPercentage");
    var backgroundGradientClass = (Model!.Content.Value<bool>("sectionBackgroundGradient")) ? $"background: linear-gradient(0deg, var(--color-{@sectionGradientColor1}) {color1GradientPercentage}%, var(--color-{@sectionGradientColor2}) {color2GradientPercentage}%);" : "";
}

<section id="@sectionId" class="@spacingTopClass @spacingBottomClass @backgroundColorClass" style="@backgroundGradientClass">

    @if(!string.IsNullOrEmpty(sectionBackgroundImage)){
        <img class="background-image" src="@sectionBackgroundImage" alt="@sectionTitle background-image">
    }
    
    @await Html.GetBlockGridItemAreasHtmlAsync(Model)
</section>