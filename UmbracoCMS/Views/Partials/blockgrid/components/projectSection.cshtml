@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>
@using Umbraco.Cms.Web.Common.PublishedModels;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.PropertyEditors.ValueConverters;

@{
	var selection = Umbraco.Content(Guid.Parse("b192c7ef-3cb4-4911-ad7a-90097ca6acda"))
    .ChildrenOfType("projectItemTemplate")
    .Where(x => x.IsVisible())
    .Take(4);

    var sectionTitle = Model?.Content.Value<string>("sectionTitle") ?? "";
    var sectionId = sectionTitle?.ToString().ToLower().Trim().Replace(" ", "-");

    var upperHeadingContent = Model?.Content.Value<string>("upperHeadingContent");
    var lowerHeadingContent = Model?.Content.Value<string>("lowerHeadingContent");

    var spacingTopClass = (Model!.Content.Value<bool>("addSpaceToTop")) ? "spacing-top" : "";
    var spacingBottomClass = (Model.Content.Value<bool>("addSpaceToBottom")) ? "spacing-bottom" : "";

    var sectionBackgroundColorLabel = (Model.Content?.Value<ColorPickerValueConverter.PickedColor>("sectionBackgroundColor"))?.Label.ToLower() ?? null;
    var backgroundColorClass = (!string.IsNullOrEmpty(sectionBackgroundColorLabel)) ? $"bg-{sectionBackgroundColorLabel}" : "";

    var sectionGradientColor1 = (Model.Content?.Value<ColorPickerValueConverter.PickedColor>("sectionGradientColor1"))?.Label.ToLower() ?? "";
    var sectionGradientColor2 = (Model.Content?.Value<ColorPickerValueConverter.PickedColor>("sectionGradientColor2"))?.Label.ToLower() ?? "";
    var color1GradientPercentage = Model?.Content.Value<int>("color1GradientPercentage");
    var color2GradientPercentage = Model?.Content.Value<int>("color2GradientPercentage");
    var backgroundGradientClass = (Model!.Content.Value<bool>("sectionBackgroundGradient")) ? $"background: linear-gradient(0deg, var(--color-{@sectionGradientColor1}) {color1GradientPercentage}%, var(--color-{@sectionGradientColor2}) {color2GradientPercentage}%);" : "";
}

<section id="home-projects" class="@spacingTopClass @spacingBottomClass @backgroundColorClass" style="@backgroundGradientClass">
    
    <div class="container">

        <div class="headline">
            @if (!string.IsNullOrEmpty(upperHeadingContent) && !string.IsNullOrEmpty(lowerHeadingContent))
            {
                <h6>@upperHeadingContent</h6>
                <h2>@lowerHeadingContent</h2>
            }
        </div>
            
    </div>

    <div class="project-slider">

        @foreach(var item in selection)
        {
            var thumbnailImg = item?.Value<IPublishedContent>("thumbnailImg")?.Url() ?? "";
            var projectCategory = item?.Value<string>("projectCategory") ?? "";
            var pageTitle = item?.Value<string>("pageTitle") ?? "";

            <a href="@item.Url()" class="project-box">
                <img src="@thumbnailImg" alt="">
                <div class="project-text">
                    <div class="project-banner">
                        <h5>@pageTitle</h5>
                        <p>@projectCategory</p>
                    </div>
                    <i class="fa-solid fa-angle-right"></i>
                </div>
            </a>
        }
        
    </div>

</section>